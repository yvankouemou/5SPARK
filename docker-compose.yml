version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/data
    networks:
      - data_network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka:9092
      KAFKA_LISTENERS: OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka_data:/kafka
    networks:
      - data_network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  spark:
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      SPARK_MASTER_HOST: spark
      SPARK_MASTER_PORT: 7077
    networks:
      - data_network
    depends_on:
      - kafka
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G

  jupyter:
    image: jupyter/pyspark-notebook:latest
    ports:
      - "8888:8888"
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    volumes:
      - ./notebooks:/home/jovyan/work
    networks:
      - data_network
    depends_on:
      - spark

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: mastodon_data
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mastodon_data"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  data_network:
    driver: bridge

volumes:
  zookeeper_data:
  kafka_data:
  postgres_data:
